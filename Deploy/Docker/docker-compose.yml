version: '3'

services:
  fluentbit-service:
    image: fluent/fluent-bit:2.1
    ports:
      - 1600:5170
    volumes:
      - ./log:/var/log
      - ./fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
    environment:
      FLUENT_UID: 0
      POSTGRES_IP: postgres-service
      ETHANOL_IP: ethanol-run-service
      ETHANOL_PORT: 5180
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ethanol
    depends_on:
      postgres-service:
        condition: service_healthy        

  postgres-service:
    image: postgres:latest
    ports:
      - 1605:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ethanol
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./ethanol-db-init.sql:/docker-entrypoint-initdb.d/ethanol.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3

  ethanol-run-service:
    build: 
      context: ../../
    command: ["/app/run-ethanol-builder.sh"]
    ports:
      - 1601:5180
    environment:
      POSTGRES_IP: postgres-service
      POSTGRES_PORT: 5432
      POSTGRES_DATABASE: ethanol
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      FLUENTBIT_IP: fluentbit-service
      FLUENTBIT_PORT: 5175
      ETHANOL_PORT: 5180
    volumes:
      - ./netify:/var/netify
    depends_on:
      postgres-service:
        condition: service_healthy
      fluentbit-service:
        condition: service_started

  ethanol-api-service:
    build: 
      context: ../../
    command: ["/app/run-ethanol-provider.sh"]
    ports:
      - 1610:5190
    environment:
      POSTGRES_IP: postgres-service
      POSTGRES_PORT: 5432
      POSTGRES_DATABASE: ethanol
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      FLUENTBIT_IP: fluentbit-service
      FLUENTBIT_PORT: 5175
      ETHANOL_PORT: 5180
    depends_on:
      postgres-service:
        condition: service_healthy
      fluentbit-service:
        condition: service_started