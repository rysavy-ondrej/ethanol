#!csharp

#r "nuget:System.Reactive"
#r "nuget:Trill"

using System.Reactive;
using System.Reactive.Linq;
using Microsoft.StreamProcessing;

#!csharp

record Artifact (string Id, long Start, long Duration, string value);

var events = new Artifact[]
{
    new Artifact("A",10,5, "TCP"),
    new Artifact("B",20,5, "TCP"),
    new Artifact("C",30,15, "TCP"),
    new Artifact("D",40,5, "TCP"),
    new Artifact("E",50,5, "TCP"),
    new Artifact("F",60,5, "TCP"),

}.Select(x=> StreamEvent.CreateInterval(x.Start, x.Start+x.Duration, x)).ToObservable();
var stream = events.ToStreamable();

#!csharp

stream.ToStreamEventObservable().Where(e=>e.IsData).ForEachAsync(e=>Console.WriteLine(e)).Wait();

#!csharp

var counts = stream.Count();
counts.ToStreamEventObservable().Where(e=>e.IsEnd).ForEachAsync(e=>Console.WriteLine($"[{e.StartTime},{e.EndTime}):{e.Payload}")).Wait();
